version: "3.7"

services:
  traefik:
    image: "traefik:v2.0.0"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  api:
    build: packages/graphql-api/
    ports:
      - 4000:4000
    environment:
      ACCESS_TOKEN_SECRET: 6fbf61ea-5214-40d8-a08b-4846daf8280an
      REFRESH_TOKEN_SECRET: de92ec07-29fe-457b-b71c-3aaf88ce01cbn
      CORS: http://localhost:3000
      ENABLE_DEBUGGING: "true"
      MAILER: smtp://localhost:1025
      TYPEORM_SYNCHRONIZE: "true"
      TYPEORM_LOGGING: "true"
      TYPEORM_ENTITIES: src/entity/**/*_entity.ts
      TYPEORM_CONNECTION: sqlite
      TYPEORM_DATABASE: tmp/db.sqlite3
    depends_on:
      - postgres
      - mailhog
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`)"
      - "traefik.http.routers.api.entrypoints=web"

  web:
    build: packages/web/
    ports:
      - 3000:3000
    environment:
      REFRESH_TOKEN_URL: "http://localhost:4000/auth/refresh_token"
      GRAPH_API_URL: "http://localhost:4000/graphql"
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.routers.web.entrypoints=api"

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: typegraphql
      POSTGRES_USER: typegraphql
      POSTGRES_PASSWORD: typegraphql
    ports:
      - 5432:5432
    volumes:
      - pg-data-graphql:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025
      - 1025:1025

volumes:
  pg-data-graphql:
